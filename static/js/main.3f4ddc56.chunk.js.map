{"version":3,"sources":["logo.svg","components/InputNames.js","components/Begin.js","components/Square.js","components/WinnerModal.js","components/TieModal.js","components/Board.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","InputNames","state","player1","player2","handle1","e","setState","target","value","handle2","Container","className","InputGroup","size","Prepend","Text","style","backgroundColor","border","FormControl","type","textAlign","fontFamily","fontWeight","placeholder","onChange","this","id","Component","Begin","useState","open","setOpen","Button","variant","onClick","aria-controls","aria-expanded","Collapse","in","ButtonContent","content","clicked","handleClick1","turn","handleClick","props","change","turnChange","x","y","disabled","Winner","Modal","aria-labelledby","centered","Header","Title","Body","val","Footer","onHide","Tie","Grid","board","modalShow","tie","winner","changeSquareValue","rowWin","row","b","colWin","col","diagWin","checkWin","console","log","changeTurn","window","location","reload","fluid","map","vv","Row","Col","v","xs","check","WinnerModal","show","_refreshPage","padding","color","margin","borderColor","borderWidth","borderStyle","icon","iconColor","iconSize","roundness","url","App","src","logo","alt","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,kC,0QCKtBC,E,4MAEjBC,MAAQ,CACJC,QAAS,GACTC,QAAS,I,EAGbC,QAAU,SAACC,GAEP,EAAKC,SAAS,CAAEJ,QAASG,EAAEE,OAAOC,S,EAEtCC,QAAU,SAACJ,GAEP,EAAKC,SAAS,CAAEH,QAASE,EAAEE,OAAOC,S,uDAGlC,OACI,kBAACE,EAAA,EAAD,CAAWC,UAAU,cACjB,kBAACC,EAAA,EAAD,CAAYD,UAAU,OAAOE,KAAK,MAC9B,kBAACD,EAAA,EAAWE,QAAZ,KACI,kBAACF,EAAA,EAAWG,KAAZ,CAAiBC,MAAO,CAAEC,gBAAiB,OAAQC,OAAQ,gBAA3D,YAEJ,kBAACC,EAAA,EAAD,CAAaC,KAAK,OAAOJ,MAAO,CAAEK,UAAW,QAASC,WAAY,kBAAmBC,WAAY,OAC7FC,YAAY,+BAA+BC,SAAUC,KAAKtB,UAE9D,kBAACQ,EAAA,EAAWE,QAAZ,KACI,kBAACF,EAAA,EAAWG,KAAZ,CAAiBY,GAAG,gBAAe,wCAEvC,kBAACR,EAAA,EAAD,CAAaC,KAAK,OAAOJ,MAAO,CAAEM,WAAW,kBAAkBC,WAAW,OACtEC,YAAY,+BAA+BC,SAAUC,KAAKjB,UAC9D,kBAACG,EAAA,EAAWE,QAAZ,KACI,kBAACF,EAAA,EAAWG,KAAZ,CAAiBC,MAAO,CAAEC,gBAAiB,OAAQC,OAAQ,gBAA3D,oB,GA/BgBU,aCsCzBC,MAtCf,WAAkB,IAAD,EACSC,oBAAS,GADlB,mBACRC,EADQ,KACFC,EADE,KAGf,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,QAAQ,eACRC,QAAS,kBAAMH,GAASD,IACxBK,gBAAc,wBACdC,gBAAeN,GAJjB,cAQA,6BAAK,6BAAM,6BAAM,8BACjB,kBAACO,EAAA,EAAD,CAAUC,GAAIR,GACZ,yBAAKJ,GAAG,yBACN,kDACA,6BAEA,kBAAC,EAAD,MAEA,6BACA,4CACA,4BACE,6EACA,qFACA,+GAEF,0CAEA,6BAAM,iC,wBChCKa,E,4MAEjBvC,MAAQ,CACJwC,QAAS,iCACTC,SAAS,G,EAEbC,aAAe,SAACC,GACZ,EAAKtC,SAAS,CAAEmC,QAAS,wBAAI9B,UAAU,SAASiC,EAAO,IAAM,EAAI,IAAM,Q,EAE3EC,YAAc,WAAO,IAAD,EACqB,EAAKC,MAAlCF,EADQ,EACRA,KAAMG,EADE,EACFA,OAAQC,EADN,EACMA,WACFD,EAAO,EAAKD,MAAMG,EAAG,EAAKH,MAAMI,EAAhDN,EAAO,IAAM,EAAsC,EACf,GACxC,EAAKD,aAAaC,GAClBI,IACA,EAAK1C,SAAS,CAACoC,SAAS,K,uDAIxB,OACQ,kBAACT,EAAA,EAAD,CAAQtB,UAAU,SAASuB,QAAQ,OAAOC,QAAST,KAAKmB,YAAcM,SAAUzB,KAAKzB,MAAMyC,SAAUhB,KAAKzB,MAAMwC,a,GApBrFb,a,OC+B5BwB,E,uKA5BP,OACI,kBAACC,EAAA,EAAD,iBACQ3B,KAAKoB,MADb,CAEIjC,KAAK,KACLyC,kBAAgB,gCAChBC,UAAQ,IAER,kBAACF,EAAA,EAAMG,OAAP,KACI,kBAACH,EAAA,EAAMI,MAAP,CAAa9B,GAAG,iCAAhB,eAIJ,kBAAC0B,EAAA,EAAMK,KAAP,KACI,sDAA4BhC,KAAKoB,MAAMa,KACvC,0DAIJ,kBAACN,EAAA,EAAMO,OAAP,KACI,kBAAC3B,EAAA,EAAD,CAAQE,QAAST,KAAKoB,MAAMe,QAA5B,kB,GArBCjC,aCAAkC,E,uKAEb,OACI,kBAACT,EAAA,EAAD,iBACQ3B,KAAKoB,MADb,CAEIjC,KAAK,KACLyC,kBAAgB,gCAChBC,UAAQ,IAER,kBAACF,EAAA,EAAMG,OAAP,KACI,kBAACH,EAAA,EAAMI,MAAP,CAAa9B,GAAG,iCAAhB,eAIJ,kBAAC0B,EAAA,EAAMK,KAAP,KACI,2CACA,0DAIJ,kBAACL,EAAA,EAAMO,OAAP,KACI,kBAAC3B,EAAA,EAAD,CAAQE,QAAST,KAAKoB,MAAMe,QAA5B,kB,GArBajC,aCIZmC,E,4MAEjB9D,MAAQ,CACJ+D,MAAO,CACH,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXpB,KAAM,EACNqB,WAAW,EACXC,KAAK,EACLC,OAAQ,G,EAGZC,kBAAoB,SAACnB,EAAGC,EAAGS,GACvB,IAAIK,EAAQ,EAAK/D,MAAM+D,MACvBA,EAAMf,GAAGC,GAAKS,EACd,EAAKrD,SAAS,CAAE0D,W,EAGpBK,OAAS,SAACC,GACN,IAAIC,EAAI,EAAKtE,MAAM+D,MACnB,OAAIO,EAAED,GAAK,KAAOC,EAAED,GAAK,IAAMC,EAAED,GAAK,KAAOC,EAAED,GAAK,IAAoB,IAAdC,EAAED,GAAK,GACtDC,EAAED,GAAK,GACX,G,EAEXE,OAAS,SAACC,GACN,IAAIF,EAAI,EAAKtE,MAAM+D,MACnB,OAAIO,EAAE,GAAGE,KAASF,EAAE,GAAGE,IAAQF,EAAE,GAAGE,KAASF,EAAE,GAAGE,IAAsB,IAAdF,EAAE,GAAGE,GACpDF,EAAE,GAAGE,GACT,G,EAEXC,QAAU,WACN,IAAIH,EAAI,EAAKtE,MAAM+D,MACnB,OAAIO,EAAE,GAAG,KAAOA,EAAE,GAAG,IAAMA,EAAE,GAAG,KAAOA,EAAE,GAAG,IAAkB,IAAZA,EAAE,GAAG,IAEnDA,EAAE,GAAG,KAAOA,EAAE,GAAG,IAAMA,EAAE,GAAG,KAAOA,EAAE,GAAG,IAAkB,IAAZA,EAAE,GAAG,GAD5CA,EAAE,GAAG,GAGT,G,EAEXI,SAAW,WAAO,IAAD,iBACLN,EADK,EACLA,OAAQG,EADH,EACGA,OAAQE,EADX,EACWA,QAClBP,EAASE,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAAKG,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAAKE,IACnFP,GAAQ,EAAK7D,SAAS,CAAE2D,WAAW,EAAME,WAErB,KAApB,EAAKlE,MAAM2C,OACXgC,QAAQC,IAAI,OACZ,EAAKvE,SAAS,CAAE4D,KAAK,M,EAI7BY,WAAa,WACT,EAAKxE,SAAS,CAAEsC,KAAM,EAAK3C,MAAM2C,KAAO,K,6DAIxCgC,QAAQC,IAAI,WACZE,OAAOC,SAASC,W,+BAGV,IAAD,OAIL,OAH6B,IAAzBvD,KAAKzB,MAAMgE,YAA0C,IAAnBvC,KAAKzB,MAAMiE,KAC7CxC,KAAKiD,WAGL,kBAACjE,EAAA,EAAD,CAAWwE,OAAK,GACX,CAAC,EAAG,EAAG,GAAGC,KAAI,SAAAC,GAAE,OACb,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,MACC,CAAC,EAAG,EAAG,GAAGH,KAAI,SAAAI,GAAC,OACZ,kBAACD,EAAA,EAAD,CAAKE,GAAG,QACJ,kBAAC,EAAD,CAAQzC,OAAQ,EAAKqB,kBAAmBxB,KAAM,EAAK3C,MAAM2C,KAAMI,WAAY,EAAK8B,WAAYW,MAAO,EAAKd,SAAU1B,EAAGmC,EAAIlC,EAAGqC,QAGpI,kBAACD,EAAA,EAAD,UAGR,kBAACI,EAAD,CAAaC,KAAMjE,KAAKzB,MAAMgE,UAAWJ,OAAQnC,KAAKkE,aAAcjC,IAAKjC,KAAKzB,MAAMkE,SACpF,kBAAC,EAAD,CAAUwB,KAAMjE,KAAKzB,MAAMiE,IAAKL,OAAQnC,KAAKkE,eAE7C,6BAAK,6BAAM,6BAAM,mC,GAhFChE,a,QCHnB,SAASgC,IACpB,OACI,kBAACyB,EAAA,EAAD,CAAKrE,MAAO,CAAEC,gBAAiB,UAC3B,kBAACqE,EAAA,EAAD,CAAKtE,MAAO,CAAE6E,QAAS,SACnB,wBAAI7E,MAAO,CAAEK,UAAW,SAAUyE,MAAO,QAASC,OAAQ,QAA1D,WAA2E,2CAE/E,kBAACT,EAAA,EAAD,CAAKtE,MAAO,CAAE6E,QAAS,SACnB,kBAAC,wBAAD,CAAuBG,YAAY,sBAAsBC,YAAY,IAAIC,YAAY,QAAQC,KAAK,WAAWC,UAAU,sBAAsBnF,gBAAgB,gBAAgBoF,SAAS,IAAIC,UAAU,MAAMC,IAAI,4CAA4C1F,KAAK,OAC/P,mCACA,kBAAC,wBAAD,CAAuBmF,YAAY,sBAAsBC,YAAY,IAAIC,YAAY,QAAQC,KAAK,SAASC,UAAU,sBAAsBnF,gBAAgB,gBAAgBoF,SAAS,IAAIC,UAAU,MAAMC,IAAI,oCAAoC1F,KAAK,OACrP,mCACA,kBAAC,wBAAD,CAAuBmF,YAAY,sBAAsBC,YAAY,IAAIC,YAAY,QAAQC,KAAK,WAAWC,UAAU,sBAAsBnF,gBAAgB,gBAAgBoF,SAAS,IAAIC,UAAU,MAAMC,IAAI,6CAA6C1F,KAAK,SCUjQ2F,MAnBf,WACE,OACE,yBAAK7F,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAK8F,IAAKC,IAAM/F,UAAU,WAAWgG,IAAI,SACzC,4BAAI,iDAGN,6BAAK,6BAAK,6BAAK,6BACf,wBAAIhG,UAAU,cAAd,gCACA,8BAEA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACiD,EAAD,QCTcgD,QACW,cAA7B7B,OAAOC,SAAS6B,UAEe,UAA7B9B,OAAOC,SAAS6B,UAEhB9B,OAAOC,SAAS6B,SAASC,MACvB,2DCZNC,IAASC,OAEP,kBAAC,EAAD,MAEAC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9C,QAAQ8C,MAAMA,EAAMC,c","file":"static/js/main.3f4ddc56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nexport default class InputNames extends Component {\r\n\r\n    state = {\r\n        player1: \"\",\r\n        player2: \"\"\r\n    }\r\n\r\n    handle1 = (e) => {\r\n        // console.log(e.target.value);\r\n        this.setState({ player1: e.target.value });\r\n    }\r\n    handle2 = (e) => {\r\n        // console.log(e.target.value);\r\n        this.setState({ player2: e.target.value });\r\n    }\r\n    render() {\r\n        return (\r\n            <Container className=\"inputNames\">\r\n                <InputGroup className=\"mb-3\" size=\"lg\">\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text style={{ backgroundColor: \"aqua\", border: \"solid black\" }}>PLAYER1</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl type=\"text\" style={{ textAlign: \"right\", fontFamily: \"Times New Roman\", fontWeight: \"900\" }}\r\n                        placeholder=\"Enter your name here player1\" onChange={this.handle1} />\r\n                    \r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text id=\"basic-addon1\"><strong>VS</strong></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl type=\"text\" style={{ fontFamily:\"Times New Roman\",fontWeight:\"900\"}}\r\n                        placeholder=\"Enter your name here player2\" onChange={this.handle2} />\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text style={{ backgroundColor: \"aqua\", border: \"solid black\" }} > PLAYER2 </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                </InputGroup>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Collapse from 'react-bootstrap/Collapse'\r\nimport InputNames from './InputNames'\r\n\r\nfunction Begin() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outline-info\"\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n      >\r\n        BEGIN GAME\r\n        </Button>\r\n      <div><br /><br /><br /></div>\r\n      <Collapse in={open}>\r\n        <div id=\"example-collapse-text\">\r\n          <h3>ENTER PLAYER NAMES</h3>\r\n          <br />\r\n\r\n          <InputNames />\r\n\r\n          <br />\r\n          <h3>INSTRUCTIONS</h3>\r\n          <ul>\r\n            <li>Player1 takes cross while Player2 takes zero.</li>\r\n            <li>Single click on a tile below for filling a cross/zero</li>\r\n            <li>The player who first fills a row/column/diagonal with all zeroes/crosses wins.</li>\r\n          </ul>\r\n          <h4>\r\n            GOOD LUCK!</h4>\r\n          <br /><br />\r\n        </div>\r\n      </Collapse>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Begin;\r\n","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default class ButtonContent extends Component {\r\n\r\n    state = {\r\n        content: <h1>.</h1>,\r\n        clicked: false\r\n    }\r\n    handleClick1 = (turn) => {\r\n        this.setState({ content: <h1 className=\"cross\">{turn % 2 !== 0 ? 'X' : 'O'}</h1> });\r\n    }\r\n    handleClick = () => {\r\n        const { turn, change, turnChange } = this.props;\r\n        if (turn % 2 !== 0) change(this.props.x, this.props.y, 1);\r\n        else change(this.props.x, this.props.y, 2);\r\n        this.handleClick1(turn);\r\n        turnChange();\r\n        this.setState({clicked: true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Button className=\"ticbut\" variant=\"dark\" onClick={this.handleClick}  disabled={this.state.clicked}>{this.state.content}</Button>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass Winner extends Component {\r\n    render() {\r\n        return (\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header >\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        GAME OVER!\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>CONGRATULATIONS PLAYER {this.props.val}</h4>\r\n                    <p>\r\n                         Hope you enjoyed the game!\r\n                    </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={this.props.onHide}>New Game</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Winner;\r\n\r\n","import React, { Component } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default class Tie extends Component {\r\n    render() {\r\n        return (\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header >\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        GAME OVER!\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>IT'S A TIE!</h4>\r\n                    <p>\r\n                         Hope you enjoyed the game!\r\n                    </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={this.props.onHide}>New Game</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Square from './Square.js'\r\nimport WinnerModal from './WinnerModal.js'\r\nimport TieModal from './TieModal.js'\r\n\r\nexport default class Grid extends Component {\r\n\r\n    state = {\r\n        board: [\r\n            [0, 0, 0],\r\n            [0, 0, 0],\r\n            [0, 0, 0]\r\n        ],\r\n        turn: 1,\r\n        modalShow: false,\r\n        tie: false,\r\n        winner: 0\r\n    }\r\n\r\n    changeSquareValue = (x, y, val) => {\r\n        let board = this.state.board;\r\n        board[x][y] = val;\r\n        this.setState({ board });\r\n    }\r\n\r\n    rowWin = (row) => {\r\n        let b = this.state.board;\r\n        if (b[row][0] === b[row][1] && b[row][1] === b[row][2] && b[row][0] !== 0)\r\n            return b[row][0];\r\n        return 0;\r\n    }\r\n    colWin = (col) => {\r\n        let b = this.state.board;\r\n        if (b[0][col] === b[1][col] && b[1][col] === b[2][col] && b[0][col] !== 0)\r\n            return b[0][col];\r\n        return 0;\r\n    }\r\n    diagWin = () => {\r\n        let b = this.state.board;\r\n        if (b[0][0] === b[1][1] && b[1][1] === b[2][2] && b[1][1] !== 0)\r\n            return b[1][1];\r\n        if (b[0][2] === b[1][1] && b[1][1] === b[2][0] && b[1][1] !== 0)\r\n            return b[1][1];\r\n        return 0;\r\n    }\r\n    checkWin = () => {\r\n        const { rowWin, colWin, diagWin } = this;\r\n        const winner = rowWin(0) ^ rowWin(1) ^ rowWin(2) ^ colWin(0) ^ colWin(1) ^ colWin(2) ^ diagWin();\r\n        if (winner) this.setState({ modalShow: true, winner });\r\n        //tie\r\n        if (this.state.turn === 10) {\r\n            console.log(\"TIE\");\r\n            this.setState({ tie: true });\r\n        }\r\n    }\r\n\r\n    changeTurn = () => {\r\n        this.setState({ turn: this.state.turn + 1 });\r\n    }\r\n\r\n    _refreshPage() {\r\n        console.log(\"Clicked\");\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.modalShow === false && this.state.tie === false)\r\n            this.checkWin();\r\n\r\n        return (\r\n            <Container fluid>\r\n                {[0, 1, 2].map(vv => (\r\n                    <Row>\r\n                        <Col></Col>\r\n                        {[0, 1, 2].map(v => (\r\n                            <Col xs=\"auto\">\r\n                                <Square change={this.changeSquareValue} turn={this.state.turn} turnChange={this.changeTurn} check={this.checkWin} x={vv} y={v} />\r\n                            </Col>\r\n                        ))}\r\n                        <Col></Col>\r\n                    </Row>\r\n                ))}\r\n                <WinnerModal show={this.state.modalShow} onHide={this._refreshPage} val={this.state.winner} />\r\n                <TieModal show={this.state.tie} onHide={this._refreshPage} />\r\n\r\n                <div><br /><br /><br /></div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { SocialMediaIconsReact } from 'social-media-icons-react';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <Row style={{ backgroundColor: \"black\" }}>\r\n            <Col style={{ padding: \"25px\" }}>\r\n                <h4 style={{ textAlign: \"center\", color: \"white\", margin: \"0px\" }}>ARADHYA <strong>GUPTA</strong></h4>\r\n            </Col>\r\n            <Col style={{ padding: \"25px\" }}>\r\n                <SocialMediaIconsReact borderColor=\"rgba(245,239,239,1)\" borderWidth=\"2\" borderStyle=\"solid\" icon=\"linkedin\" iconColor=\"rgba(245,227,227,1)\" backgroundColor=\"rgba(8,8,8,1)\" iconSize=\"0\" roundness=\"50%\" url=\"https://www.linkedin.com/in/gupta-aradhya\" size=\"36\" />\r\n                <span> </span>\r\n                <SocialMediaIconsReact borderColor=\"rgba(245,239,239,1)\" borderWidth=\"2\" borderStyle=\"solid\" icon=\"github\" iconColor=\"rgba(245,227,227,1)\" backgroundColor=\"rgba(8,8,8,1)\" iconSize=\"3\" roundness=\"50%\" url=\"https://github.com/aradhya-gupta/\" size=\"36\" />\r\n                <span> </span>\r\n                <SocialMediaIconsReact borderColor=\"rgba(245,239,239,1)\" borderWidth=\"2\" borderStyle=\"solid\" icon=\"facebook\" iconColor=\"rgba(245,227,227,1)\" backgroundColor=\"rgba(8,8,8,1)\" iconSize=\"0\" roundness=\"50%\" url=\"https://www.facebook.com/aradhya.gupta0308\" size=\"36\" />\r\n            </Col>\r\n        </Row>\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Begin from './components/Begin.js'\nimport Board from './components/Board';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1><strong>TIC-TAC-TOE</strong></h1>\n      </header>\n\n      <div><br/><br/><hr/>\n      <h1 className=\"begin_head\">IT IS A TWO-PLAYER FUN GAME!</h1>\n      <hr/></div>\n\t\n      <Begin/>\n      <Board />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}