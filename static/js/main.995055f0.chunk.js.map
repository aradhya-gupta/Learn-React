{"version":3,"sources":["logo.svg","InputNames.js","Begin.js","Square.js","Winner.js","Tie.js","Grid.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","InputNames","useState","player1","setPlayer1","player2","setPlayer2","context","useContext","AppContext","console","log","Container","className","InputGroup","size","Prepend","Text","style","backgroundColor","border","FormControl","type","textAlign","fontFamily","fontWeight","placeholder","onChange","e","target","value","players","set","id","Begin","open","setOpen","Button","variant","onClick","aria-controls","aria-expanded","Collapse","in","ButtonContent","state","content","clicked","handleClick1","turn","setState","handleClick","props","change","turnChange","x","y","this","disabled","Component","Winner","Modal","aria-labelledby","centered","Header","Title","Body","val","get","Footer","onHide","Tie","Grid","board","modalShow","tie","winner","changeSquareValue","rowWin","row","b","colWin","col","diagWin","checkWin","changeTurn","window","location","reload","fluid","Row","Col","map","v","xs","check","show","_refreshPage","padding","color","margin","borderColor","borderWidth","borderStyle","icon","iconColor","iconSize","roundness","url","createContext","App","p","src","logo","alt","Provider","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.995055f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { useContext, useState } from 'react'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nimport {AppContext} from './App';\r\n\r\nexport default function InputNames() {\r\n    const [player1, setPlayer1] = useState(\"\"); \r\n    const [player2, setPlayer2] = useState(\"\");    \r\n    const context = useContext(AppContext);\r\n    console.log(context);\r\n    const handle1 = (e) => {\r\n        setPlayer1(e.target.value);\r\n        const players = [e.target.value, player2];\r\n        context.players.set(players);\r\n    }\r\n    const handle2 = (e) => {\r\n        setPlayer2(e.target.value);\r\n        const players = [player1, e.target.value];\r\n        context.players.set(players);\r\n    }\r\n    return (\r\n        <Container className=\"inputNames\">\r\n            <InputGroup className=\"mb-3\" size=\"lg\">\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text style={{ backgroundColor: \"aqua\", border: \"solid black\" }}>PLAYER1</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl type=\"text\" style={{ textAlign: \"right\", fontFamily: \"Times New Roman\", fontWeight: \"900\" }}\r\n                    placeholder=\"Enter your name here player1\" onChange={handle1} />\r\n\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"basic-addon1\"><strong>VS</strong></InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl type=\"text\" style={{ fontFamily: \"Times New Roman\", fontWeight: \"900\" }}\r\n                    placeholder=\"Enter your name here player2\" onChange={handle2} />\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text style={{ backgroundColor: \"aqua\", border: \"solid black\" }} > PLAYER2 </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n            </InputGroup>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Collapse from 'react-bootstrap/Collapse'\r\nimport InputNames from './InputNames'\r\n\r\nfunction Begin() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outline-info\"\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n      >\r\n        BEGIN GAME\r\n        </Button>\r\n      <div><br /><br /><br /></div>\r\n      <Collapse in={open}>\r\n        <div id=\"example-collapse-text\">\r\n          <h3>ENTER PLAYER NAMES</h3>\r\n          <br />\r\n\r\n          <InputNames />\r\n\r\n          <br />\r\n          <h3>INSTRUCTIONS</h3>\r\n          <ul>\r\n            <li>Player1 takes cross while Player2 takes zero.</li>\r\n            <li>Single click on a tile below for filling a cross/zero</li>\r\n            <li>The player who first fills a row/column/diagonal with all zeroes/crosses wins.</li>\r\n          </ul>\r\n          <h4>\r\n            GOOD LUCK!</h4>\r\n          <br /><br />\r\n        </div>\r\n      </Collapse>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Begin;\r\n","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default class ButtonContent extends Component {\r\n\r\n    state = {\r\n        content: <h1>.</h1>,\r\n        clicked: false\r\n    }\r\n    handleClick1 = (turn) => {\r\n        this.setState({ content: <h1 className=\"cross\">{turn % 2 !== 0 ? 'X' : 'O'}</h1> });\r\n    }\r\n    handleClick = () => {\r\n        const { turn, change, turnChange } = this.props;\r\n        if (turn % 2 !== 0) change(this.props.x, this.props.y, 1);\r\n        else change(this.props.x, this.props.y, 2);\r\n        this.handleClick1(turn);\r\n        turnChange();\r\n        this.setState({clicked: true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Button className=\"ticbut\" variant=\"dark\" onClick={this.handleClick}  disabled={this.state.clicked}>{this.state.content}</Button>\r\n        )\r\n    }\r\n}\r\n","import React, { useContext } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport {AppContext} from './App'; \r\n\r\nfunction Winner(props) {\r\n    const context = useContext(AppContext);\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    GAME OVER!\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Congratulations {props.val===1?context.players.get[0]:context.players.get[props.val-1]} &#127881;&#127881;</h4>\r\n                <p>\r\n                    Hope you enjoyed the game!\r\n                    </p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={props.onHide}>New Game</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Winner;\r\n\r\n","import React, { Component } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default class Tie extends Component {\r\n    render() {\r\n        return (\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header >\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        GAME OVER!\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>IT'S A TIE!</h4>\r\n                    <p>\r\n                         Hope you enjoyed the game!\r\n                    </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={this.props.onHide}>New Game</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Square from './Square.js'\r\nimport Winner from './Winner.js'\r\nimport Tie from './Tie.js'\r\n\r\nexport default class Grid extends Component {\r\n\r\n    state = {\r\n        board: [\r\n            [0, 0, 0],\r\n            [0, 0, 0],\r\n            [0, 0, 0]\r\n        ],\r\n        turn: 1,\r\n        modalShow: false,\r\n        tie: false,\r\n        winner: 0\r\n    }\r\n\r\n    changeSquareValue = (x, y, val) => {\r\n        let board = this.state.board;\r\n        board[x][y] = val;\r\n        this.setState({ board });\r\n    }\r\n\r\n    rowWin = (row) => {\r\n        let b = this.state.board;\r\n        if (b[row][0] === b[row][1] && b[row][1] === b[row][2] && b[row][0] !== 0)\r\n            return b[row][0];\r\n        return 0;\r\n    }\r\n    colWin = (col) => {\r\n        let b = this.state.board;\r\n        if (b[0][col] === b[1][col] && b[1][col] === b[2][col] && b[0][col] !== 0)\r\n            return b[0][col];\r\n        return 0;\r\n    }\r\n    diagWin = () => {\r\n        let b = this.state.board;\r\n        if (b[0][0] === b[1][1] && b[1][1] === b[2][2] && b[1][1] !== 0)\r\n            return b[1][1];\r\n        if (b[0][2] === b[1][1] && b[1][1] === b[2][0] && b[1][1] !== 0)\r\n            return b[1][1];\r\n        return 0;\r\n    }\r\n    checkWin = () => {\r\n        const { rowWin, colWin, diagWin } = this;\r\n        const winner = rowWin(0) ^ rowWin(1) ^ rowWin(2) ^ colWin(0) ^ colWin(1) ^ colWin(2) ^ diagWin();\r\n        if (winner){\r\n            let winner; \r\n            if(this.state.turn % 2 === 1) winner = 2; else winner = 1; \r\n            this.setState({ modalShow: true, winner });\r\n        }\r\n        //tie\r\n        if (this.state.turn === 10) {\r\n            console.log(\"TIE\");\r\n            this.setState({ tie: true });\r\n        }\r\n    }\r\n\r\n    changeTurn = () => {\r\n        this.setState({ turn: this.state.turn + 1 });\r\n    }\r\n\r\n    _refreshPage() {\r\n        console.log(\"Clicked\");\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.modalShow === false && this.state.tie === false)\r\n            this.checkWin();\r\n\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col></Col>\r\n                    {[0, 1, 2].map(v => (\r\n                        <Col xs=\"auto\">\r\n                            <Square change={this.changeSquareValue} turn={this.state.turn} turnChange={this.changeTurn} check={this.checkWin} x={0} y={v} />\r\n                        </Col>\r\n                    ))}\r\n                    <Col></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col></Col>\r\n                    {[0, 1, 2].map(v => (\r\n                        <Col xs=\"auto\">\r\n                            <Square change={this.changeSquareValue} turn={this.state.turn} turnChange={this.changeTurn} check={this.checkWin} x={1} y={v} />\r\n                        </Col>\r\n                    ))}\r\n                    <Col></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col></Col>\r\n                    {[0, 1, 2].map(v => (\r\n                        <Col xs=\"auto\">\r\n                            <Square change={this.changeSquareValue} turn={this.state.turn} turnChange={this.changeTurn} check={this.checkWin} x={2} y={v} />\r\n                        </Col>\r\n                    ))}\r\n                    <Col></Col>\r\n                </Row>\r\n\r\n                <Winner show={this.state.modalShow} onHide={this._refreshPage} val={this.state.winner} />\r\n                <Tie show={this.state.tie} onHide={this._refreshPage} />\r\n\r\n                <div><br /><br /><br /></div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { SocialMediaIconsReact } from 'social-media-icons-react';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <Row style={{ backgroundColor: \"black\" }}>\r\n            <Col style={{ padding: \"25px\" }}>\r\n                <h4 style={{ textAlign: \"center\", color: \"white\", margin: \"0px\" }}>ARADHYA <strong>GUPTA</strong></h4>\r\n            </Col>\r\n            <Col style={{ padding: \"25px\" }}>\r\n                <SocialMediaIconsReact borderColor=\"rgba(245,239,239,1)\" borderWidth=\"2\" borderStyle=\"solid\" icon=\"linkedin\" iconColor=\"rgba(245,227,227,1)\" backgroundColor=\"rgba(8,8,8,1)\" iconSize=\"0\" roundness=\"50%\" url=\"https://www.linkedin.com/in/gupta-aradhya\" size=\"36\" />\r\n                <span> </span>\r\n                <SocialMediaIconsReact borderColor=\"rgba(245,239,239,1)\" borderWidth=\"2\" borderStyle=\"solid\" icon=\"github\" iconColor=\"rgba(245,227,227,1)\" backgroundColor=\"rgba(8,8,8,1)\" iconSize=\"3\" roundness=\"50%\" url=\"https://github.com/aradhya-gupta/\" size=\"36\" />\r\n                <span> </span>\r\n                <SocialMediaIconsReact borderColor=\"rgba(245,239,239,1)\" borderWidth=\"2\" borderStyle=\"solid\" icon=\"facebook\" iconColor=\"rgba(245,227,227,1)\" backgroundColor=\"rgba(8,8,8,1)\" iconSize=\"0\" roundness=\"50%\" url=\"https://www.facebook.com/aradhya.gupta0308\" size=\"36\" />\r\n            </Col>\r\n        </Row>\r\n\r\n    )\r\n}\r\n","import React, {createContext, useState} from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Begin from './Begin.js'\r\nimport Grid from './Grid';\r\nimport Footer from './Footer';\r\n\r\nexport const AppContext = createContext({}); \r\n\r\nfunction App() {\r\n  const [players, setPlayers] = useState([]);\r\n  const p = {\r\n    players: { get:players, set:setPlayers}\r\n  }; \r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <h1><strong>TIC-TAC-TOE</strong></h1>\r\n      </header>\r\n      <div><br/><br/><hr/>\r\n      <h1 className=\"begin_head\">IT IS A TWO-PLAYER FUN GAME!</h1>\r\n      <hr/></div>\r\n      <AppContext.Provider value={p}>\r\n        <Begin/>\r\n        <Grid />\r\n        <Footer />\r\n      </AppContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\r\n  <App />\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}